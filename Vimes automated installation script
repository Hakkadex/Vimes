#!/bin/bash

# Create the Vimes directory and navigate to it
mkdir -p ~/Vimes
cd ~/Vimes

# Create and populate the Vimes.py file
cat << 'EOF' > Vimes.py
#!/usr/bin/env python3

import sys
import requests
from bs4 import BeautifulSoup
import urllib.parse
import datetime

SEARCH_ENGINES = {
    'Google': 'https://www.google.com/search',
}

SEARCH_TERMS = {
    '-s': ['stabbing', 'knife attack'],
    '-r': ['robbery', 'robbers', 'man robbed', 'woman robbed'],
    '-m': ['murder', 'man murdered', 'woman murdered'],
    '-g': ['gang attack', 'gang fight', 'gang members']
}

def perform_search(query, search_type):
    """Perform a search on Google."""
    search_queries = [f"{query} {term}" for term in SEARCH_TERMS.get(search_type, [])]
    headlines = []

    for search_query in search_queries:
        headers = {
            'User-Agent': 'Vimes CLI Tool'
        }
        params = {'q': urllib.parse.quote(search_query)}

        try:
            response = requests.get(SEARCH_ENGINES['Google'], headers=headers, params=params)
            response.raise_for_status()
            
            soup = BeautifulSoup(response.text, 'html.parser')
            for item in soup.find_all('h3'):
                title = item.get_text()
                parent_a = item.find_parent('a')
                if parent_a and parent_a.has_attr('href'):
                    url = parent_a['href']
                else:
                    url = 'No URL available'
                
                # Extract the date from the search result (if available)
                date = datetime.datetime.now().strftime('%Y-%m-%d')
                
                headlines.append({'title': title, 'url': url, 'date': date})

        except requests.exceptions.RequestException as e:
            print(f"An error occurred while querying Google: {e}")

    return headlines

def display_results(results):
    """Display search results in the terminal, sorted by date."""
    if not results:
        print("No results found.")
        return

    # Sort results by date in reverse chronological order
    sorted_results = sorted(results, key=lambda x: x['date'], reverse=True)

    for result in sorted_results:
        print(f"Title: {result['title']}")
        print(f"URL: {result['url']}")
        print(f"Date: {result['date']}\n")
        print("-" * 80)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: vimesget [-s|-r|-m|-g] <location>")
        sys.exit(1)

    search_type = None
    location = None

    if sys.argv[1] in SEARCH_TERMS:
        search_type = sys.argv[1]
        if len(sys.argv) >= 3:
            location = sys.argv[2]
        else:
            print("Error: Location argument is missing.")
            sys.exit(1)
    else:
        location = sys.argv[1]
        search_type = '-s'  # Default search type

    if location:
        results = perform_search(location, search_type)
        display_results(results)
EOF

# Make the Vimes.py file executable
chmod +x Vimes.py

# Create a symlink to make the command available in the PATH
ln -s ~/Vimes/Vimes.py /usr/local/bin/vimesget

echo "Installation complete. You can now use the 'vimesget' command from anywhere."
